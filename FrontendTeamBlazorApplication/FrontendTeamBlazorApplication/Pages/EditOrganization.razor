@page "/editorganization/{ScrumOrganizationId}"
@using FrontendTeamBlazorApplication.Models
@using FrontendTeamBlazorApplication.Services

@inject NavigationManager NavigationManager
@inject ScrumOrganizationService ScrumOrganizationService;

<h3>Edit Organization</h3>

@if (string.IsNullOrEmpty(ScrumOrganizationId))
{
    <p>
        <em>Unable to locate scrum organization!</em>
    </p>
}
else
{
    <EditForm Model="Organization" OnSubmit="OnSubmit">
        <DataAnnotationsValidator />
        <div class="add-boxes">
            <p>
                <label class="input-label">Organization Name:</label>
                <InputText @bind-Value=Organization.Name id="Name"/>
            </p>
        </div>
        <div>
            <p>
                <input type="submit" value="Submit" class="btn btn-primary" disabled="@_submitDisabled"/>
                <label hidden="@_savingHidden">Saving...</label>
            </p>
        </div>
    </EditForm>
}



@code {
    [Parameter]
    public string ScrumOrganizationId { get; set; }

    private bool _savingHidden = true;
    
    private bool _submitDisabled;
    
    private bool _displayValidationMessages;

    private Organization Organization { get; set; }

    Dictionary<string, object> _savingLabelAttributes = new Dictionary<string, object>();

    protected override async Task OnInitializedAsync()
    {
        Guid id = Guid.Parse(ScrumOrganizationId);
        Organization = await ScrumOrganizationService.GetScrumOrganizationsByIdAsync(id);
    }

    private async Task OnSubmit()
    {
        _submitDisabled = true;
        _savingHidden = false;
        StateHasChanged();
        
        await Task.Delay(3000);

        NavigationManager.NavigateTo("/vieworganizations", true);
    }
  
}